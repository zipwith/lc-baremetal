> require "core.llc"
> require "put.llc"
> require "portio.llc"

> export sputchar :: Word -> Proc Unit
> sputchar c
>   = let put :: Word -> Proc Unit
>         put c = do status <- inb com1ctrl
>                    if (status `and` 0x60) == 0
>                      then put c
>                      else outb com1data c
>     in do put c
>           if c=='\n'
>             then put '\r'

> com1data = port 0x3f8
> com1ctrl = com1data `portPlus` 5

PRINTING ON THE SERIAL PORT:
----------------------------

> export sputs                       :: Ref String -> Proc Unit
> export sputUnsigned, sputSigned    :: Putnum
> export sputBin, sputOctal, sputHex :: Putnum
> export sputSize                    :: Putnum
> export sputDigitsFmt
>   :: NZBit WordBits -- number base
>      -> Ix MaxWidth -- maximum number of digits to display
>      -> Ix MaxWidth -- minimum field width
>      -> Word        -- character to use as padding
>      -> Putnum

> sputs        = hputs        sputchar
> sputUnsigned = hputUnsigned sputchar
> sputSigned   = hputSigned   sputchar
> sputBin      = hputBin      sputchar
> sputOctal    = hputOctal    sputchar
> sputHex      = hputHex      sputchar
> sputSize     = hputSize     sputchar
> sputDigitsFmt base max min padchar
>              = hputDigitsFmt base max min padchar sputchar


